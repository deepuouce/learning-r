shape = Plant,
color = Type)) + geom_point(size = 5)
head(msleep)
a <- ggplot(data = msleep, aes(x = bodywt, y = sleep_total))
a <- a + geom_point()
a <- a + xlab("Body Weight") + ylab("Total Hours Sleep") + ggtitle("Some Sleep Data")
a
library(ggplot2)
mydata = read.csv("~/_aiman/workspace/test/weekly-total.csv")
library(ggplot2)
mydata = read.csv("~/_aiman/workspace/tes/weekly-total.csv")
View(mydata)
View(mydata)
ggplot(data=mydata, aes(x=published)) +
geom_bar()
library(ggplot2)
mydata = read.csv("~/_aiman/workspace/tes/weekly-total.csv")
ggplot(data=mydata, aes(x=published, y=count)) +
geom_bar()
library(ggplot2)
mydata = read.csv("~/_aiman/workspace/tes/weekly-total.csv")
ggplot(data=mydata, aes(x=published, y=count)) +
geom_line()
library(ggplot2)
df.mydata = read.csv("~/_aiman/workspace/tes/weekly-total.csv")
ggplot(data=df.mydata, aes(x=published, y=count)) +
geom_line() +
geom_point()
library(ggplot2)
df.mydata = read.csv("~/_aiman/workspace/tes/weekly-total.csv")
ggplot(data=df.mydata, aes(x=published, y=count)) +
geom_line() +
geom_point(size=5)
library(ggplot2)
df.mydata = read.csv("~/_aiman/workspace/tes/weekly-total.csv")
ggplot(data=df.mydata, aes(x=published)) +
geom_bar(stat="bin")
library(ggplot2)
df.mydata = read.csv("~/_aiman/workspace/tes/weekly-total.csv")
ggplot(data=df.mydata, aes(x=published, y=count)) +
geom_bar(stat="bin")
library(ggplot2)
df.mydata = read.csv("~/_aiman/workspace/tes/weekly-total.csv", header=TRUE)
ggplot(data=df.mydata, aes(x=published, y=count)) +
geom_bar()
library(ggplot2)
df.dummy_data <- data.frame(category_var = c("A", "B", "C", "D", "E"),
numeric_var = c(5,2,9,4,5))
## BASIC BARCHART SYNTAX
ggplot(data=df.dummy_data, aes(x=category_var, y=numeric_var)) +
geom_bar(stat="identity") # stat="identity" means that using y axes as the value
View(df.mydata)
View(df.dummy_data)
View(df.mydata)
df.mydata = read.csv("~/_aiman/workspace/tes/weekly-total.csv", header=TRUE)
View(df.mydata)
library(ggplot2)
df.mydata = read.csv("~/_aiman/workspace/tes/weekly-total.csv", header=TRUE)
ggplot(data=df.mydata, aes(x=published)) +
geom_bar()
library(ggplot2)
df.mydata = read.csv("~/_aiman/workspace/tes/weekly-total.csv", header=TRUE)
ggplot(data=df.mydata, aes(x=published)) +
geom_line()
library(ggplot2)
df.mydata = read.csv("~/_aiman/workspace/tes/weekly-total.csv", header=TRUE)
ggplot(data=df.mydata, aes(x=published, y=count)) +
geom_line()
library(ggplot2)
df.mydata = read.csv("~/_aiman/workspace/tes/weekly-total.csv", header=TRUE)
ggplot(data=df.mydata, aes(x=published, y=count)) +
geom_point()
total_daily <- read.csv(file="~/_aimanb/workspace/tes/weekly-total.csv")
total_daily
total_daily <- read.csv(file="~/_aimanb/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
total_daily
total_daily <- read.csv(file="/_aimanb/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
total_daily
total_daily <- read.csv(file="/_aiman/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
total_daily
total_daily <- read.csv(file="~/_aiman/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
total_daily
library(ggplo2)
df.dummy_data <- data.frame(category_var = c("A", "B", "C", "D", "E"),
numeric_var = c(5,2,9,4,5))
## BASIC BARCHART SYNTAX
ggplot(data=df.dummy_data, aes(x=category_var, y=numeric_var)) +
geom_bar(stat="identity") # stat="identity" means that using y axes as the value
library(ggplot2)
df.dummy_data <- data.frame(category_var = c("A", "B", "C", "D", "E"),
numeric_var = c(5,2,9,4,5))
## BASIC BARCHART SYNTAX
ggplot(data=df.dummy_data, aes(x=category_var, y=numeric_var)) +
geom_bar(stat="identity") # stat="identity" means that using y axes as the value
View(total_daily)
library(ggplot2)
total_daily <- read.csv(file="~/_aiman/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
ggplot(data=total_daily, aes(x=published, y=count)) +
geom_bar()
library(ggplot2)
total_daily <- read.csv(file="~/_aiman/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
ggplot(data=total_daily, aes(x=published, y=count)) +
geom_bar(stat="bin")
library(ggplot2)
total_daily <- read.csv(file="~/_aiman/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
ggplot(data=total_daily, aes(x=published)) +
geom_bar(stat="bin")
total_daily <- read.csv(file="~/_aiman/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
View(total_daily)
library(ggplot2)
total_daily <- read.csv(file="~/_aiman/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
ggplot(data=total_daily, aes(x=published)) +
geom_bar()
library(ggplot2)
total_daily <- read.csv(file="~/_aiman/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
ggplot(data=total_daily, aes(x=published)) +
geom_line()
library(ggplot2)
total_daily <- read.csv(file="~/_aiman/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
ggplot(data=total_daily, aes(x=published)) +
geom_point()
library(ggplot2)
total_daily <- read.csv(file="~/_aiman/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
ggplot(data=total_daily, aes(x=published, y=count)) +
geom_point()
library(ggplot2)
total_daily <- read.csv(file="~/_aiman/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
ggplot(data=total_daily, aes(x=published, y=count)) +
geom_point() +
geom_line()
y
library(ggplot2)
total_daily <- read.csv(file="~/_aiman/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
ggplot(data=total_daily, aes(x=count)) +
geom_histogram()
library(ggplot2)
total_daily <- read.csv(file="~/_aiman/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
ggplot(data=total_daily, aes(y=count)) +
geom_histogram()
library(ggplot2)
total_daily <- read.csv(file="~/_aiman/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
ggplot(data=total_daily, aes(x=published, y=count)) +
geom_histogram()
library(ggplot2)
total_daily <- read.csv(file="~/_aiman/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
ggplot(data=total_daily, aes(x=published, y=count)) +
geom_bar()
library(ggplot2)
total_daily <- read.csv(file="~/_aiman/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
ggplot(data=total_daily, aes(x=count)) +
geom_histogram()
View(df.dummy_data)
View(total_daily)
View(df.dummy_data)
library(ggplot2)
total_daily <- read.csv(file="~/_aiman/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
ggplot(data=total_daily, aes(x=published, y=count)) +
geom_bar(stat="identity")
library(ggplot2)
total_daily <- read.csv(file="~/_aiman/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
ggplot(data=total_daily, aes(x=published, y=count)) +
geom_bar(stat="identity")
library(ggplot2)
total_daily <- read.csv(file="~/_aiman/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
ggplot(data=total_daily, aes(x=published, y=count)) +
geom_bar(stat="identity") +
coord_reverse()
library(ggplot2)
total_daily <- read.csv(file="~/_aiman/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
ggplot(data=total_daily, aes(x=published, y=count)) +
geom_bar(stat="identity") +
coord_reverse()
library(ggplot2)
total_daily <- read.csv(file="~/_aiman/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
ggplot(data=total_daily, aes(x=published, y=count)) +
geom_bar(stat="identity") +
coord_flip()
library(ggplot2)
total_daily <- read.csv(file="~/_aiman/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
ggplot(data=total_daily, aes(x=published, y=count)) +
geom_line(stat="identity") +
coord_flip()
library(ggplot2)
total_daily <- read.csv(file="~/_aiman/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
ggplot(data=total_daily, aes(x=published, y=count)) +
geom_line(stat="identity")
library(ggplot2)
total_daily <- read.csv(file="~/_aiman/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
ggplot(data=total_daily, aes(x=published, y=count)) +
geom_line(stat="identity")
library(ggplot2)
total_daily <- read.csv(file="~/_aiman/workspace/tes/weekly-total.csv", head=TRUE, sep=",")
ggplot(data=total_daily, aes(x=published, y=count)) +
geom_bar(stat="identity") +
coord_flip()
ggplot(data=total_daily, aes(x=published, y=count)) +
geom_line(stat="identity")
ggplot(data=total_daily, aes(x=published, y=count)) +
geom_line(stat="bin")
ggplot(data=total_daily, aes(x=published, y=count)) +
geom_line(stat="identity")
ggplot(data=total_daily, aes(x=published, y=count)) +
geom_path()
ggplot(data=total_daily, aes(x=published, y=count, group=count)) +
geom_path()
ggplot(data=total_daily, aes(x=published, y=count, group=published)) +
geom_path()
ggplot(data=total_daily, aes(x=published, y=count, group=sum(count))) +
geom_path()
ggplot(data=total_daily, aes(x=published, y=count, group=sum(count))) +
geom_path() +
geom_bar(stat="identity")
ggplot(data=total_daily, aes(x=published, y=count, group=sum(count))) +
geom_path() +
geom_point()
View(total_daily)
ggplot(data=total_daily, aes(x=published, y=count, group=sum(count))) +
geom_path() +
geom_point() +
coord_flip()
ggplot(data=total_daily, aes(x=published, y=count)) +
geom_bar(stat="identity") +
coord_flip()
###############
# IMPORT DATA
###############
#-----------
# Car Specs
#-----------
df.car_specs <- read.csv(url("http://www.sharpsightlabs.com/wp-content/uploads/2015/01/auto-snout_car-specifications_COMBINED.txt")
,colClasses = c(car_full_nm = "character"
,horsepower_bhp = "integer"
,rpm_horsepower_measure_point = "integer"
,torque_lb_ft = "integer"
,rpm_torque_measure_point = "integer"
,car_0_60_time_seconds = "numeric"
,engine_size_cc = "integer"
,engine_size_ci = "numeric"
,top_speed_mph = "integer"
,top_speed_kph = "integer"
,horsepower_per_ton_bhp = "numeric"
,year = "integer"
,decade = "factor"
,make_nm = "factor"
,car_weight_tons = "numeric"
,torque_per_ton = "numeric")
)
#-----------------------
# SAN FRANCISCO CRIME
#-----------------------
# Download the zipped SF crime data (2014)
#  and save it to the working directory
download.file("http://www.sharpsightlabs.com/wp-content/uploads/2015/01/sf_crime_YTD-2014-12_REDUCED.txt.zip", destfile="sf_crime_YTD-2014-12_REDUCED.txt.zip")
# Unzip the SF crime data file
unzip("sf_crime_YTD-2014-12_REDUCED.txt.zip")
# Read crime data into an R dataframe
df.sf_crime <- read.csv("sf_crime_YTD-2014-12_REDUCED.txt"
,colClasses = c(crime_category = "factor"
,district = "factor"
,year = "factor"
,month = "factor"
,day = "factor"
,hour = "factor"
,DayOfWeek = "factor"
,longitude = "numeric"
,latitude = "numeric"
,X = "numeric"
,Y = "numeric"
))
#-----------
# China C02
#-----------
df.china_co2 <- read.csv(url("http://www.sharpsightlabs.com/wp-content/uploads/2015/01/china_co2_1961_to_2010_data.txt"))
library(ggplot2)
## DUMMY DATA SET
set.seed(11)
df.test_data <- data.frame(foo = rnorm(50, mean=5, sd=2),
bar = rnorm(50, mean=5, sd=1)
)
## BASIC SCATTERPLOT
ggplot(data=df.test_data, aes(x=foo, y=bar)) + # adding a layer
geom_point()
## BASIC SCATTERPLOT
ggplot(data=df.test_data, aes(x=foo, y=bar)) + # adding a layer
geom_point()
## CHANGE SIZE
ggplot(data=df.test_data, aes(x=foo, y=bar)) +
geom_point(size=7) # set size
ggplot(data=df.test_data, aes(x=foo, y=bar)) +
geom_point(color="red", size=6) # set size and color
ggplot(data=df.test_data, aes(x=foo, y=bar)) + # adding a layer
geom_point(shape=2, size=6, color="dark red") # set shapes and sizes
set.seed(41)
df.test_data <- data.frame(foo = 1:50 + rnorm(50, sd=2),
bar = 1:50 + rnorm(50, sd=14))
set.seed(41)
df.test_data <- data.frame(foo = 1:50 + rnorm(50, sd=2),
bar = 1:50 + rnorm(50, sd=14))
## BASIC PLOT
ggplot(data=df.test_data, aes(x=foo, y=bar)) +
geom_point()
ggplot(data=df.test_data, aes(x=foo, y=bar)) +
geom_point() +
geom_smooth(method=lm) # add line, method=linear model
ggplot(data=df.test_data, aes(x=foo, y=bar)) +
geom_point(color="purple", size=4) +
geom_smooth(method=lm, size=1.4)
df.dummy_data <- data.frame(category_var = c("A", "B", "C", "D", "E"),
numeric_var = c(5,2,9,4,5))
## BASIC BARCHART SYNTAX
ggplot(data=df.dummy_data, aes(x=category_var, y=numeric_var)) +
geom_bar(stat="identity") # stat="identity" means that using y axes as the value
ggplot(data=df.sf_crime, aes(x=hour)) +
geom_bar(stat="bin") # bin is default
ggplot(data=diamonds, aes(x=cut)) +
geom_bar(stat="bin") # bin is default
ggplot(data=diamonds, aes(x=cut)) +
geom_bar(stat="bin") +
coord_flip() # flip x to y
ggplot(data=diamonds, aes(x=cut)) +
geom_bar(size=2, fill="dark blue", color="red", stat="bin") +
coord_flip() # flip x to y
library(ggplot2)
df.dummy_data <- data.frame(
dummy_metric <- cumsum(1:20),
date = seq.Date(as.Date("1980-01-01"), by="1 year", length.out=20))
# plot data using line
ggplot(data=df.dummy_data, aes(x=date, y=dummy_metric)) +
geom_line()
ggplot(data=df.dummy_data, aes(x=date, y=dummy_metric)) +
geom_line() +
geom_point(
df.dummy_data <- data.frame(
dummy_metric <- cumsum(1:20),
date = seq.Date(as.Date("1980-01-01"), by="1 year", length.out=20))
# plot data using line
ggplot(data=df.dummy_data, aes(x=date, y=dummy_metric)) +
geom_line()
## ADDING LAYERS
ggplot(data=df.dummy_data, aes(x=date, y=dummy_metric)) +
geom_line() +
geom_point()
ggplot(data=df.dummy_data, aes(x=date, y=dummy_metric)) +
geom_line(color="navy", size=2) +
geom_point(size=3)
ggplot(data=df.dummy_data, aes(x=date, y=dummy_metric)) +
geom_line(linetype="twodash", size=5)
ggplot(data=df.dummy_data, aes(x=date, y=dummy_metric)) +
geom_line(linetype="twodash", size=2)
library(ggplot2)
set.seed(11)
df.histogram_dummy <- data.frame(x_var = rnorm(2000))
# BASIC HISTOGRAM
ggplot(data=df.histogram_dummy, aes(x=x_var)) +
geom_histogram()
ggplot(data=df.histogram_dummy, aes(x=x_var)) +
geom_histogram(binwidth=.1)
# ADD COLOR AND BORDER
ggplot(data=df.histogram_dummy, aes(x=x_var)) +
geom_histogram(color="light gray", fill="red", binwidth=.1)
## using car_specs dataset
ggplot(data=df.car_specs, aes(x=horsepower_bhp)) +
geom_histogram()
ggplot(data=df.car_specs, aes(x=horsepower_bhp)) +
geom_histogram(color="light gray", fill="blue")
library(ggplot2)
df.facet_data <- read.csv(url("http://www.sharpsightlabs.com/wp-content/uploads/2014/12/facet_dummy_data.csv"))
df.facet_data$month <- factor(df.facet_data$month, levels=month.abb)
ggplot(data=df.facet_data, aes(x=month, y=sales, group=region)) +
geom_line()
ggplot(data=df.facet_data, aes(x=month, y=sales, group=1)) +
geom_line() + # create one line chart
facet_grid(region ~ .) # region by nothing
library(ggplot2)
df.facet_data <- read.csv(url("http://www.sharpsightlabs.com/wp-content/uploads/2014/12/facet_dummy_data.csv"))
df.facet_data$month <- factor(df.facet_data$month, levels=month.abb)
ggplot(data=df.facet_data, aes(x=month, y=sales, group=region)) +
geom_line()
# FACET GRID
ggplot(data=df.facet_data, aes(x=month, y=sales, group=1)) +
geom_line() + # create one line chart
facet_grid(region ~ .) # region by nothing
## SF CRIME EXAMPLE
ggplot(data=df.sf_crime, aes(x=crime_category)) +
geom_bar()
ggplot(data=df.sf_crime, aes(x=crime_category)) +
geom_bar() +
facet_grid(DayOfWeek ~ district) # row by column
# FACET WRAP
head(diamonds)
## histogram
ggplot(data=diamonds, aes(x=carat)) +
geom_histogram()
## facet on "cut"
ggplot(data=diamonds, aes(x=price)) +
geom_histogram() +
facet_wrap(~cut)
## faceted scatterplot
ggplot(data=diamonds, aes(x=carat, y=price)) +
geom_point() +
facet_wrap(~cut)
## more example
ggplot(data=df.car_specs, aes(x=horsepower_bhp, y=top_speed_mph)) +
geom_point(alpha=.6)
ggplot(data=df.car_specs, aes(x=horsepower_bhp, y=top_speed_mph)) +
geom_point(alpha=.6) +
facet_wrap(~decade)
ggplot(data=df.car_specs, aes(x=torque_lb_ft)) +
geom_histogram(alpha=.6) +
facet_wrap(~decade)
ggplot(data=df.car_specs, aes(x=torque_lb_ft)) +
geom_histogram(alpha=.6) +
facet_wrap(~dec
ggplot(data=df.car_specs, aes(x=torque_lb_ft)) +
geom_histogram(alpha=.6) +
facet_wrap(~decade)
ggplot(data=df.car_specs, aes(x=torque_lb_ft)) +
geom_histogram(alpha=.6) +
facet_wrap(~decade)
ggplot(data=df.test_data, aes(x=foo, y=bar)) + # adding a layer
geom_point(shape=2, size=6, color="dark red") # set shapes and sizes
ggplot(data=df.dummy_data, aes(x=category_var, y=numeric_var)) +
geom_bar(stat="identity") # stat="identity" means that using y axes as the value
library(ggplot2)
df.dummy_data <- data.frame(category_var = c("A", "B", "C", "D", "E"),
numeric_var = c(5,2,9,4,5))
## BASIC BARCHART SYNTAX
ggplot(data=df.dummy_data, aes(x=category_var, y=numeric_var)) +
geom_bar(stat="identity") # stat="identity" means that using y axes as the value
library(ggplot2)
## COUNT OF RECORDS
### using san francisco crime data set
ggplot(data=df.sf_crime, aes(x=hour)) +
geom_bar(stat="bin") # bin is default
## BASIC BARCHART SYNTAX
ggplot(data=df.dummy_data, aes(x=category_var, y=numeric_var)) +
geom_bar(stat="identity") # stat="identity" means that using y axes as the value
## COUNT OF RECORDS
### using san francisco crime data set
ggplot(data=df.sf_crime, aes(x=hour)) +
geom_bar(stat="bin") # bin is default
ggplot(data=df.dummy_data, aes(x=category_var)) +
geom_bar(stat="bin") # stat="identity" means that using y axes as the value
ggplot(data=df.dummy_data, aes(x=numeric_var)) +
geom_bar(stat="bin") # stat="identity" means that using y axes as the value
library(ggplot2)
### using san francisco crime data set
ggplot(data=df.sf_crime, aes(x=hour)) +
geom_bar(stat="bin") # bin is default
## BASIC BARCHART SYNTAX
ggplot(data=df.dummy_data, aes(x=category_var, y=numeric_var)) +
geom_bar(stat="identity") # stat="identity" means that using y axes as the value
ggplot(data=df.dummy_data, aes(x=date, y=dummy_metric)) +
geom_line(linetype="twodash", size=5)
library(ggplot2)
df.dummy_data <- data.frame(
dummy_metric <- cumsum(1:20),
date = seq.Date(as.Date("1980-01-01"), by="1 year", length.out=20))
ggplot(data=df.dummy_data, aes(x=date, y=dummy_metric)) +
geom_line(linetype="twodash", size=5)
ggplot(data=df.dummy_data, aes(x=date, y=dummy_metric)) +
geom_line(linetype="blank", size=5)
geom_line(linetype="dotdash", size=5)
ggplot(data=df.dummy_data, aes(x=date, y=dummy_metric)) +
geom_line(linetype="dotdash", size=5)
ggplot(data=df.dummy_data, aes(x=date, y=dummy_metric)) +
geom_line(linetype="longdash", size=5)
library(ggplot2)
set.seed(11)
df.histogram_dummy <- data.frame(x_var = rnorm(2000))
# BASIC HISTOGRAM
ggplot(data=df.histogram_dummy, aes(x=x_var)) +
geom_histogram()
# WIDER BINWIDTH
## default is range/30
ggplot(data=df.histogram_dummy, aes(x=x_var)) +
geom_histogram(binwidth=.1)
## default is range/30
ggplot(data=df.histogram_dummy, aes(x=x_var)) +
geom_histogram(binwidth=.1)
ggplot(data=df.histogram_dummy, aes(x=x_var)) +
geom_histogram()
df.facet_data <- read.csv(url("http://www.sharpsightlabs.com/wp-content/uploads/2014/12/facet_dummy_data.csv"))
df.facet_data$month <- factor(df.facet_data$month, levels=month.abb)
ggplot(data=df.facet_data, aes(x=month, y=sales, group=region)) +
geom_line()
View(df.test_data)
View(df.facet_data)
ggplot(data=df.sf_crime, aes(x=crime_category)) +
geom_bar()
ggplot(data=df.sf_crime, aes(x=crime_category)) +
geom_bar() +
facet_grid(DayOfWeek ~ district) # row by column
View(df.sf_crime)
ggplot(data=df.facet_data, aes(x=month, y=sales, group=1)) +
geom_line() + # create one line chart
facet_grid(region ~ .) # region by nothing
ggplot(data=diamonds, aes(x=price)) +
geom_histogram() +
facet_wrap(~cut)
ggplot(data=diamonds, aes(x=carat, y=price)) +
geom_point() +
facet_grid(~cut)
ggplot(data=diamonds, aes(x=price)) +
geom_histogram() +
facet_grid(~cut)
ggplot(data=diamonds, aes(x=price)) +
geom_histogram() +
facet_wrap(~cut)
ggplot(data=df.car_specs, aes(x=torque_lb_ft)) +
geom_histogram(alpha=.6) +
facet_wrap(~decade)
