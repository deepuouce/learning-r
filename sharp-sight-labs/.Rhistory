install.packages("ggplot2")
library(ggplot2) # import ggplot2 package
ggplot(data=diamonds, aes(x=diamonds$cut)) + geom_bar()
###############
# IMPORT DATA
###############
#-----------
# Car Specs
#-----------
df.car_specs <- read.csv(url("http://www.sharpsightlabs.com/wp-content/uploads/2015/01/auto-snout_car-specifications_COMBINED.txt")
,colClasses = c(car_full_nm = "character"
,horsepower_bhp = "integer"
,rpm_horsepower_measure_point = "integer"
,torque_lb_ft = "integer"
,rpm_torque_measure_point = "integer"
,car_0_60_time_seconds = "numeric"
,engine_size_cc = "integer"
,engine_size_ci = "numeric"
,top_speed_mph = "integer"
,top_speed_kph = "integer"
,horsepower_per_ton_bhp = "numeric"
,year = "integer"
,decade = "factor"
,make_nm = "factor"
,car_weight_tons = "numeric"
,torque_per_ton = "numeric")
)
#-----------------------
# SAN FRANCISCO CRIME
#-----------------------
# Download the zipped SF crime data (2014)
#  and save it to the working directory
download.file("http://www.sharpsightlabs.com/wp-content/uploads/2015/01/sf_crime_YTD-2014-12_REDUCED.txt.zip", destfile="sf_crime_YTD-2014-12_REDUCED.txt.zip")
# Unzip the SF crime data file
unzip("sf_crime_YTD-2014-12_REDUCED.txt.zip")
# Read crime data into an R dataframe
df.sf_crime <- read.csv("sf_crime_YTD-2014-12_REDUCED.txt"
,colClasses = c(crime_category = "factor"
,district = "factor"
,year = "factor"
,month = "factor"
,day = "factor"
,hour = "factor"
,DayOfWeek = "factor"
,longitude = "numeric"
,latitude = "numeric"
,X = "numeric"
,Y = "numeric"
))
#-----------
# China C02
#-----------
df.china_co2 <- read.csv(url("http://www.sharpsightlabs.com/wp-content/uploads/2015/01/china_co2_1961_to_2010_data.txt"))
setwd(~/R/sharp-sight-labs)
setwd("~/R/sharp-sight-labs")
setwd("~/R/sharp-sight-labs")
wd
dir
###############
# IMPORT DATA
###############
#-----------
# Car Specs
#-----------
df.car_specs <- read.csv(url("http://www.sharpsightlabs.com/wp-content/uploads/2015/01/auto-snout_car-specifications_COMBINED.txt")
,colClasses = c(car_full_nm = "character"
,horsepower_bhp = "integer"
,rpm_horsepower_measure_point = "integer"
,torque_lb_ft = "integer"
,rpm_torque_measure_point = "integer"
,car_0_60_time_seconds = "numeric"
,engine_size_cc = "integer"
,engine_size_ci = "numeric"
,top_speed_mph = "integer"
,top_speed_kph = "integer"
,horsepower_per_ton_bhp = "numeric"
,year = "integer"
,decade = "factor"
,make_nm = "factor"
,car_weight_tons = "numeric"
,torque_per_ton = "numeric")
)
#-----------------------
# SAN FRANCISCO CRIME
#-----------------------
# Download the zipped SF crime data (2014)
#  and save it to the working directory
download.file("http://www.sharpsightlabs.com/wp-content/uploads/2015/01/sf_crime_YTD-2014-12_REDUCED.txt.zip", destfile="sf_crime_YTD-2014-12_REDUCED.txt.zip")
# Unzip the SF crime data file
unzip("sf_crime_YTD-2014-12_REDUCED.txt.zip")
# Read crime data into an R dataframe
df.sf_crime <- read.csv("sf_crime_YTD-2014-12_REDUCED.txt"
,colClasses = c(crime_category = "factor"
,district = "factor"
,year = "factor"
,month = "factor"
,day = "factor"
,hour = "factor"
,DayOfWeek = "factor"
,longitude = "numeric"
,latitude = "numeric"
,X = "numeric"
,Y = "numeric"
))
#-----------
# China C02
#-----------
df.china_co2 <- read.csv(url("http://www.sharpsightlabs.com/wp-content/uploads/2015/01/china_co2_1961_to_2010_data.txt"))
sf_crime_YTD.2014.12_REDUCED <- read.csv("~/R/sharp-sight-labs/module_1/sf_crime_YTD-2014-12_REDUCED.txt")
View(sf_crime_YTD.2014.12_REDUCED)
library(ggplot2)
# DUMMY DATA SET
set.seed(11)
df.test_data <- data.frame(foo = rnorm(50, mean=5, sd=2),
bar = rnorm(50, mean=5, sd=1)
)
## BASIC SCATTERPLOT
ggplot(data=df.test_data, aes(x=foo, y=bar)) +
geom_point()
library(ggplot2)
# DUMMY DATA SET
set.seed(11)
df.test_data <- data.frame(foo = rnorm(50, mean=5, sd=2),
bar = rnorm(50, mean=5, sd=1)
)
## BASIC SCATTERPLOT
ggplot(data=df.test_data, aes(x=foo, y=bar)) + # adding a layer
geom_point(size=7)
# CHANGE SIZE/COLOR/SHAPE
ggplot(data=df.test_data, aes(x=foo, y=bar)) + # adding a layer
geom_point(size=7) # set size
library(ggplot2)
ggplot(data=df.test_data, aes(x=foo, y=bar)) + # adding a layer
geom_point()
ggplot(data=df.test_data, aes(x=foo, y=bar)) + # adding a layer
geom_point(color="red")
## CHANGE COLOR
ggplot(data=df.test_data, aes(x=foo, y=bar)) + # adding a layer
geom_point(color="red", size=6)
## HOLLOW POINTS
# by default, points are solid
ggplot(data=df.test_data, aes(x=foo, y=bar)) + # adding a layer
geom_point(shape=1) # set shape
## HOLLOW POINTS
# by default, points are solid
ggplot(data=df.test_data, aes(x=foo, y=bar)) + # adding a layer
geom_point(shape=1, size=6) # set shape
## HOLLOW POINTS
# by default, points are solid
ggplot(data=df.test_data, aes(x=foo, y=bar)) + # adding a layer
geom_point(shape=4, size=6) # set shape
## HOLLOW POINTS
# by default, points are solid
ggplot(data=df.test_data, aes(x=foo, y=bar)) + # adding a layer
geom_point(shape=3, size=6, color="dark red") # set shapes and sizes
## HOLLOW POINTS
# by default, points are solid
ggplot(data=df.test_data, aes(x=foo, y=bar)) + # adding a layer
geom_point(shape=2, size=6, color="dark red") # set shapes and sizes
ggplot(data=df.test_data, aes(x=foo, y=bar)) +
geom_point() +
geom_smooth(method=lm)
ggplot(data=df.test_data, aes(x=foo, y=bar)) +
geom_point(color="blue", size=4) +
geom_smooth(method=lm, size=1.4)
ggplot(data=df.test_data, aes(x=foo, y=bar)) +
geom_point(color="purple", size=4) +
geom_smooth(method=lm, size=1.4)
###############
# IMPORT DATA
###############
#-----------
# Car Specs
#-----------
df.car_specs <- read.csv(url("http://www.sharpsightlabs.com/wp-content/uploads/2015/01/auto-snout_car-specifications_COMBINED.txt")
,colClasses = c(car_full_nm = "character"
,horsepower_bhp = "integer"
,rpm_horsepower_measure_point = "integer"
,torque_lb_ft = "integer"
,rpm_torque_measure_point = "integer"
,car_0_60_time_seconds = "numeric"
,engine_size_cc = "integer"
,engine_size_ci = "numeric"
,top_speed_mph = "integer"
,top_speed_kph = "integer"
,horsepower_per_ton_bhp = "numeric"
,year = "integer"
,decade = "factor"
,make_nm = "factor"
,car_weight_tons = "numeric"
,torque_per_ton = "numeric")
)
#-----------------------
# SAN FRANCISCO CRIME
#-----------------------
# Download the zipped SF crime data (2014)
#  and save it to the working directory
download.file("http://www.sharpsightlabs.com/wp-content/uploads/2015/01/sf_crime_YTD-2014-12_REDUCED.txt.zip", destfile="sf_crime_YTD-2014-12_REDUCED.txt.zip")
# Unzip the SF crime data file
unzip("sf_crime_YTD-2014-12_REDUCED.txt.zip")
# Read crime data into an R dataframe
df.sf_crime <- read.csv("sf_crime_YTD-2014-12_REDUCED.txt"
,colClasses = c(crime_category = "factor"
,district = "factor"
,year = "factor"
,month = "factor"
,day = "factor"
,hour = "factor"
,DayOfWeek = "factor"
,longitude = "numeric"
,latitude = "numeric"
,X = "numeric"
,Y = "numeric"
))
#-----------
# China C02
#-----------
df.china_co2 <- read.csv(url("http://www.sharpsightlabs.com/wp-content/uploads/2015/01/china_co2_1961_to_2010_data.txt"))
ggplot(data=df.dummy_data, aes(x=category_var, y=numberic_var)) +
geom_bar(stat="identity") #
library(ggplo2)
df.dummy_data <- data.frame(category_var = c("A", "B", "C", "D", "E"),
numeric_var = c(5,2,9,4,5))
ggplot(data=df.dummy_data, aes(x=category_var, y=numberic_var)) +
geom_bar(stat="identity") #
library(ggplo2)
df.dummy_data <- data.frame(category_var = c("A", "B", "C", "D", "E"),
numeric_var = c(5,2,9,4,5))
ggplot(data=df.dummy_data, aes(x=category_var, y=numeric_var)) +
geom_bar(stat="identity") #
View(df.dummy_data)
View(df.dummy_data)
library(ggplo2)
df.dummy_data <- data.frame(category_var = c("A", "B", "C", "D", "E"),
numeric_var = c(5,2,9,4,5))
ggplot(data=df.dummy_data, aes(x=category_var, y=numeric_var)) +
geom_bar() # stat="identity" means that y
library(ggplo2)
df.dummy_data <- data.frame(category_var = c("A", "B", "C", "D", "E"),
numeric_var = c(5,2,9,4,5))
ggplot(data=df.dummy_data, aes(x=category_var, y=numeric_var)) +
geom_bar(stat="identity") # stat="identity" means that y
View(df.sf_crime)
View(df.sf_crime)
### using san francisco crime data set
ggplot(data=df.sf_crime, aes(x=hour)) +
geom_bar(stat="bin") # stat="identity" means that using y axes as the value
ggplot(data=df.sf_crime, aes(x=year)) +
geom_bar(stat="bin")
ggplot(data=df.sf_crime, aes(x=day)) +
geom_bar(stat="bin")
geom_bar()
geom_bar()
ggplot(data=df.sf_crime, aes(x=hour)) +
geom_bar()
ggplot(data=diamonds, aes(x=cut)) +
geom_bar(stat="bin") # bin is default
ggplot(data=diamonds, aes(x=count)) +
ggplot(data=diamonds, aes(x=count)) +
geom_bar(stat="bin") # bin is default
ggplot(data=diamonds, aes(x=count)) +
geom_bar(stat="bin") # bin is default
ggplot(data=diamonds, aes(x=cut)) +
geom_bar(stat="bin") +
coord_flip()
ggplot(data=diamonds, aes(x=cut)) +
geom_bar(color="red", stat="bin") +
coord_flip() # flip x to y
ggplot(data=diamonds, aes(x=cut)) +
geom_bar(fill="red", color="red", stat="bin") +
coord_flip() # flip x to y
ggplot(data=diamonds, aes(x=cut)) +
geom_bar(fill="dark red", color="red", stat="bin") +
coord_flip() # flip x to y
ggplot(data=diamonds, aes(x=cut)) +
geom_bar(fill=NA, color="red", stat="bin") +
coord_flip() # flip x to y
ggplot(data=diamonds, aes(x=cut)) +
geom_bar(size=2, fill="dark red", color="red", stat="bin") +
coord_flip() # flip x to y
ggplot(data=diamonds, aes(x=cut)) +
geom_bar(size=2, fill="dark blue", color="red", stat="bin") +
coord_flip() # flip x to y
ggplot(data=diamonds, aes(x=cut)) +
geom_bar(width=2, fill="dark blue", color="red", stat="bin") +
coord_flip() # flip x to y
ggplot(data=diamonds, aes(x=cut)) +
geom_bar(width=.2, fill="dark blue", color="red", stat="bin") +
coord_flip() # flip x to y
ggplot(data=diamonds, aes(x=cut)) +
geom_bar(width=.2, stat="bin") +
coord_flip() # flip x to y
ggplot(data=diamonds, aes(x=cut)) +
geom_bar(width=.7, stat="bin") +
coord_flip() # flip x to y
ggplot(data=diamonds, aes(x=cut)) +
geom_bar(width=.9, stat="bin") +
coord_flip() # flip x to y
library(ggplot2)
df.dummy_data <- data.frame(
dummy_metric <- cumsum(1:20),
date = seq.Date(as.Date("1980-01-01"), by="1 year", length.out=20))
View(df.dummy_data)
ggplot(data=df.dummy_data, aes(x=date, y=dummy_metric)) +
geom_line()
ggplot(data=df.dummy_data, aes(x=date, y=dummy_metric)) +
geom_line() +
geom_point()
ggplot(data=df.dummy_data, aes(x=date, y=dummy_metric)) +
geom_line(color="red", size=3) +
geom_point()
ggplot(data=df.dummy_data, aes(x=date, y=dummy_metric)) +
geom_line(color="red", size=3) +
geom_point(size=6)
ggplot(data=df.dummy_data, aes(x=date, y=dummy_metric)) +
geom_line(color="red", size=2) +
geom_point(size=3)
ggplot(data=df.dummy_data, aes(x=date, y=dummy_metric)) +
geom_line(color="navy", size=2) +
geom_point(size=3)
ggplot(data=df.dummy_data, aes(x=date, y=dummy_metric)) +
geom_line(linetype="solid")
ggplot(data=df.dummy_data, aes(x=date, y=dummy_metric)) +
geom_line(linetype="dotted")
ggplot(data=df.dummy_data, aes(x=date, y=dummy_metric)) +
geom_line(linetype="dotted", size=5)
ggplot(data=df.dummy_data, aes(x=date, y=dummy_metric)) +
geom_line(linetype="dotdash", size=5)
ggplot(data=df.dummy_data, aes(x=date, y=dummy_metric)) +
geom_line(linetype="twodash", size=5)
ggplot(data=df.histogram_dummy, aes(x=x_var)) +
geom_histogram()
library(ggplot2)
set.seed(11)
df.histogram_dummy <- data.frame(x_var = rnorm(2000))
# BASIC HISTOGRAM
ggplot(data=df.histogram_dummy, aes(x=x_var)) +
geom_histogram()
ggplot(data=df.histogram_dummy, aes(x=x_var)) +
geom_histogram(width=.3)
ggplot(data=df.histogram_dummy, aes(x=x_var)) +
geom_histogram(width=4)
ggplot(data=df.histogram_dummy, aes(x=x_var)) +
geom_histogram(gap=3)
ggplot(data=df.histogram_dummy, aes(x=x_var)) +
geom_histogram(binwidht=.5
ggplot(data=df.histogram_dummy, aes(x=x_var)) +
geom_histogram(binwidht=.5
library(ggplot2)
set.seed(11)
df.histogram_dummy <- data.frame(x_var = rnorm(2000))
# BASIC HISTOGRAM
ggplot(data=df.histogram_dummy, aes(x=x_var)) +
geom_histogram(binwidht=.5
library(ggplot2)
set.seed(11)
df.histogram_dummy <- data.frame(x_var = rnorm(2000))
# BASIC HISTOGRAM
ggplot(data=df.histogram_dummy, aes(x=x_var)) +
geom_histogram(binwidth=.5)
View(df.histogram_dummy)
library(ggplot2)
set.seed(11)
df.histogram_dummy <- data.frame(x_var = rnorm(2000))
# BASIC HISTOGRAM
ggplot(data=df.histogram_dummy, aes(x=x_var)) +
geom_histogram()
ggplot(data=df.histogram_dummy, aes(x=x_var)) +
geom_histogram(binwidth=.5)
ggplot(data=df.histogram_dummy, aes(x=x_var)) +
geom_histogram(binwidth=.1)
ggplot(data=df.histogram_dummy, aes(x=x_var)) +
geom_histogram(binwidth=.001)
geom_histogram(color="red",binwidth=.1)
ggplot(data=df.histogram_dummy, aes(x=x_var)) +
geom_histogram(color="red",binwidth=.1)
ggplot(data=df.histogram_dummy, aes(x=x_var)) +
geom_histogram(fill="red",binwidth=.1)
# ADD COLOR AND BORDER
ggplot(data=df.histogram_dummy, aes(x=x_var)) +
geom_histogram(color="green", fill="red", binwidth=.1)
ggplot(data=df.histogram_dummy, aes(x=x_var)) +
geom_histogram(color="gray", fill="red", binwidth=.1)
ggplot(data=df.histogram_dummy, aes(x=x_var)) +
geom_histogram(color="light gray", fill="red", binwidth=.1)
ggplot(data=df.car_specs, aes(x=horsepower_bhp)) +
geom_histogram()
ggplot(data=df.car_specs, aes(x=horsepower_bhp)) +
geom_histogram(color="light gray", fill="blue")
# AKA faceting
library(ggplot2)
df.facet_data <- read.csv(url("http://www.sharpsightlabs.com/wp-content/uploads/2014/12/facet_dummy_data.csv"))
df.facet_data$month <- factor(df.dacet_data$month, levels=month.abb)
# AKA faceting
library(ggplot2)
df.facet_data <- read.csv(url("http://www.sharpsightlabs.com/wp-content/uploads/2014/12/facet_dummy_data.csv"))
df.facet_data$month <- factor(df.facet_data$month, levels=month.abb)
View(df.facet_data)
View(df.facet_data)
# AKA faceting. trellis chart
library(ggplot2)
df.facet_data <- read.csv(url("http://www.sharpsightlabs.com/wp-content/uploads/2014/12/facet_dummy_data.csv"))
df.facet_data$month <- factor(df.facet_data$month, levels=month.abb)
ggplot(data=df.facet_data, aes(x=month, y=sales, group=region)) +
geom_line()
View(df.facet_data)
ggplot(data=df.facet_data, aes(x=month, y=sales, group=1)) +
geom_line() +
facet_grid(region ~ .)
ggplot(data=df.sf_crime, aes(x=crime_category)) +
geom_bar()
View(df.sf_crime)
ggplot(data=df.sf_crime, aes(x=crime_category)) +
geom_bar() +
facet_grid(DayOfWeek ~ district)
View(df.sf_crime)
head(diamonds)
ggplot(data=diamonds, aes(x=carat)) +
geom_histogram()
ggplot(data=diamonds, aes(x=price)) +
geom_histogram() +
facet_wrap(~cut)
ggplot(data=diamonds, aes(x=price)) +
geom_point() +
facet_wrap(~cut)
ggplot(data=diamonds, aes(x=price)) +
geom_points() +
facet_wrap(~cut)
ggplot(data=diamonds, aes(x=price, y=price)) +
geom_point() +
facet_wrap(~cut)
ggplot(data=diamonds, aes(x=carat, y=price)) +
geom_point() +
facet_wrap(~cut)
ggplot(data=df.car_specs, aes(x=horsepower_bhp, y=top_speed_mph)) +
geom_point(alpha=.6)
ggplot(data=df.car_specs, aes(x=horsepower_bhp, y=top_speed_mph)) +
geom_point(alpha=.6) +
facet_wrap(~decade)
ggplot(data=df.car_specs, aes(x=torque_lb_ft)) +
geom_point(alpha=.6) +
facet_wrap(~decade)
ggplot(data=df.car_specs, aes(x=torque_lb_ft)) +
geom_histogram(alpha=.6) +
facet_wrap(~decade)
